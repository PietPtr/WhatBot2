var JoinLeaveModule = function() {
	var self = this;
	var adminJoinPart = []

	var fs = require('fs');

	self.client = null;

	self.joinListener = function(nick, to, text, message) {

		fs.readFile(__dirname + '/admins.txt', function(err, data) {
			if (err) {
				throw err;
			}

			adminJoinPart = data.toString().split(",")
		});

		var command = text.split(' ')[0];
		var channel = text.split(' ')[1];

		if (command == '!join' && adminJoinPart.indexOf(nick) != -1) {
			try {
				this.join(channel);
			}
			catch(err) {
				this.notice(nick, "There was a problem: " + err);
			}
		} else if (command == '!join' && adminJoinPart.indexOf(nick) === -1) {
			this.notice(nick, "You are not my admin! My admins are: " + adminJoinPart.toString())
			console.log(adminJoinPart)
		} 
	}

	self.partListener = function(nick, to, text, message) {

		var command = text.split(' ')[0];
		var channel = text.split(' ')[1];
		var message = text.split(' ')[2];

		if (command == '!part' && adminJoinPart.indexOf(nick) != -1) {
			try {
				this.part(channel, message);
				console.log("leaving " + channel + " because " + message)
			}
			catch(err) {
				this.notice(nick, "There was a problem: " + err);
			}
		} else if (command == '!part' && adminJoinPart.indexOf(nick) === -1) {
			this.notice(nick, "You are not my admin! My adminJoinPart are: " + adminJoinPart)
		} 
	}
  /**
   * Unloads all listeners
  */
  self.unload = function(client) {
    client.removeListener('notice', self.joinListener);
    client.removeListener('notice', self.partListener);
  };

  /**
   * Loads all listeners
  */
  self.load = function(client) {
    client.addListener('notice', self.joinListener);
    client.addListener('notice', self.partListener);
    self.client = client;
  };

};

module.exports = new JoinLeaveModule();